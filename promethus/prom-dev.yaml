apiVersion: v1
kind: Namespace
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  namespace: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccount: prometheus
      securityContext:
        runAsUser: 0
      containers:
      - name: server
        image: quay.io/prometheus/prometheus:v2.34.0
        args:
        - "--config.file=/etc/prometheus/prometheus.yaml"
        - "--enable-feature=expand-external-labels"
        - "--storage.tsdb.path=/data"
        - "--storage.tsdb.min-block-duration=15m"
        - "--storage.tsdb.max-block-duration=4h"
        - "--storage.tsdb.retention=168h"
        - "--log.level=info"
        - "--log.format=json"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: prometheus
            scheme: HTTP
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: prometheus
            scheme: HTTP
          initialDelaySeconds: 20
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/prometheus.yaml
          subPath: prometheus.yaml
        - name: data-volume
          mountPath: /data
        ports:
        - name: prometheus
          containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: data-volume
        emptyDir: {}
      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
data:
  prometheus.yaml: |
    global:
      scrape_interval: 30s #scrape targets every 30seconds.
      external_labels: #refer to https://github.com/prometheus/prometheus/issues/6047
        prometheus_pod: ${POD_NAME}
    scrape_configs:
    - job_name: 'prometheus-self'
      static_configs:
      - targets: ['localhost:9090']
        labels:
          container: server
    - job_name: 'vault-pods'
      metrics_path: "/v1/sys/metrics"
      params:
        format: ['prometheus']
      scheme: https
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - dev
            - prasoon-sidecar
        selectors:
        - role: "pod"
          label: "app=vault"
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: (.+):(?:\d+);(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: k8s_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: k8s_pod