---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  labels:
    app: vault
data:
  extraconfig-from-values.hcl: |-
    disable_mlock = true
    ui = true
    
    listener "tcp" {
      address = "[::]:8200"
      cluster_address = "[::]:8201"
      telemetry {
            unauthenticated_metrics_access = true
      }
      tls_cert_file = "/vault/cert/vault.crt"
      tls_key_file = "/vault/cert/vault.key"
      tls_client_ca_file = "/vault/cert/vault.ca"
    }

    storage "raft" {
      path = "/vault/data"
      node_id = "HOSTNAME"
      retry_join {
        auto_join = "provider=k8s label_selector=\"app=vault,component=server\" namespace=\"VAULT_K8S_NAMESPACE\" "
        leader_tls_servername = "vault"
        auto_join_scheme = "https"
        leader_ca_cert_file = "/vault/cert/vault.ca"
        leader_client_key_file = "/vault/cert/vault.key"
        leader_client_cert_file = "/vault/cert/vault.crt"
      }
    }

    telemetry {
      prometheus_retention_time = "12h"
      disable_hostname = true
    }

    service_registration "kubernetes" {}
    
    pid_file = "/vault/audit/pidfile.pid"

    # configuration for using auto-unseal, using Google Cloud KMS. The
    # GKMS keys must already exist, and the cluster must have a service account
    # that is authorized to access GCP KMS.
    seal "gcpckms" {
       project     = "myproject"
       region      = "us-west1"
       key_ring    = "vault-keyring"
       crypto_key  = "unseal-key-dev"
    }
